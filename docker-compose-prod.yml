version: "3.9"

services:

  redis:
    container_name: redis
    image: redis:7.2.1-alpine
    restart: always

  app:
    container_name: django
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:13.4-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  celery:
    container_name: celery
    build:
      context: .
    command: celery -A core worker -l info
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_HOST=db
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - redis
      - app

  celery-beat:
    container_name: celery_beat
    user: root
    build:
      context: .
    command: celery -A core beat -l info
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_HOST=db
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - redis
      - app

  proxy:
    container_name: proxy
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:8000"
    volumes:
      - static-data:/vol/static

volumes:
    postgres-data:
    static-data:
